Assignment:
1. Find the list of passengers (user_id, user_type First name and
last name) who have traveled from Bengaluru to Chennai during
the month of Oct 2021 and Aug 2022

select y.user_id, y.user_type, y.firstname, y.lastname
    -> from train_user y natural join (select passenger_id as user_id
    -> from ticket
    -> where departure = 'Bengaluru' and
    -> arrival = 'Chennai' and
    -> travel_date in ((select travel_date from ticket
    -> where travel_date like '2022-08%') union (select travel_date from ticket
    -> where travel_date like '2021-10%'))) as x;

2. Find the list of passengers (user_id, user_type First name and
last name) who have traveled from Bengaluru to Chennai during
the month of Oct 2021 and also during Aug 2022

select y.user_id, y.user_type, y.firstname, y.lastname
    -> from train_user y natural join (select passenger_id as user_id
    -> from ticket
    -> where departure = 'Bengaluru' and
    -> arrival = 'Chennai' and
    -> passenger_id in ((select passenger_id from ticket
    -> where travel_date like '2022-08%') intersect (select passenger_id from ticket
    -> where travel_date like '2021-10%'))) as x;

3. Find the list of passengers (user_id, user_type First name and
last name) who have traveled from Bengaluru to Chennai during
the month of Aug 2022 and not in Oct 2021

select y.user_id, y.user_type, y.firstname, y.lastname
    -> from train_user y natural join (select passenger_id as user_id
    -> from ticket
    -> where departure = 'Bengaluru' and
    -> arrival = 'Chennai' and
    -> passenger_id in ((select passenger_id from ticket
    -> where travel_date like '2022-08%') except (select passenger_id from ticket
    -> where travel_date like '2021-10%'))) as x;

4. Find the list of passengers (user_id, user_type, First name and
last name) who have traveled from Bengaluru to Chennai and
returned to Bengaluru within a week.

select z.user_id, z.user_type, z.firstname, z.lastname
    -> from train_user as z
    -> natural join (select x.passenger_id as user_id
    -> from ticket x
    -> where x.departure = 'Bengaluru' and
    -> x.arrival = 'Chennai' and
    -> exists (select y.passenger_id from ticket y
    -> where y.departure = 'Chennai' and
    -> y.arrival = 'Bengaluru' and
    -> x.passenger_id = y.passenger_id and
    -> x.travel_date - y.travel_date <= 7)) as w;

5. Find the list of passengers (user_id, user_type, First name and
last name) who have traveled from Bengaluru to Chennai and did
not return to Bengaluru (in other words, only one way travel
from Bengaluru to Chennai)

select z.user_id, z.user_type, z.firstname, z.lastname
    -> from train_user as z
    -> natural join (select x.passenger_id as user_id
    -> from ticket x
    -> where x.departure = 'Bengaluru' and
    -> x.arrival = 'Chennai' and
    -> not exists (select y.passenger_id from ticket y
    -> where y.departure = 'Chennai' and
    -> y.arrival = 'Bengaluru' and
    -> x.passenger_id = y.passenger_id)) as w;

/* Data needed for the assignment */
INSERT INTO ticket (PNR, Train_No, Travel_date, Passenger_id,
arrival_time, departure_time, Train_Type, compartment_type,
compartment_No, age, arrival, departure)
VALUES ('PNR021', 62621, '2021-10-22', 'USR_008', '20:30:00',
'16:00:00', 'Superfast', 'I Class', 'F01', null, 'Chennai',
'Bengaluru' );

update train set source = trim(source), destination =
trim(destination);